"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.assertValidRule = exports.isValidRule = exports.assertValidRuleset = void 0;
const json_1 = require("@stoplight/json");
const ajv_1 = require("./ajv");
const errors_1 = require("./errors");
function assertValidRuleset(ruleset, format = 'js') {
    var _a;
    if (!(0, json_1.isPlainObject)(ruleset)) {
        throw new Error('Provided ruleset is not an object');
    }
    if (!('rules' in ruleset) && !('extends' in ruleset) && !('overrides' in ruleset)) {
        throw new errors_1.RulesetValidationError('Ruleset must have rules or extends or overrides defined');
    }
    const validate = (0, ajv_1.createValidator)(format);
    if (!validate(ruleset)) {
        throw new errors_1.RulesetAjvValidationError(ruleset, (_a = validate.errors) !== null && _a !== void 0 ? _a : []);
    }
}
exports.assertValidRuleset = assertValidRuleset;
function isValidRule(rule) {
    return typeof rule === 'object' && rule !== null && !Array.isArray(rule) && ('given' in rule || 'then' in rule);
}
exports.isValidRule = isValidRule;
function assertValidRule(rule) {
    if (!isValidRule(rule)) {
        throw new TypeError('Invalid rule');
    }
}
exports.assertValidRule = assertValidRule;
//# sourceMappingURL=assertions.js.map