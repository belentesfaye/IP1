"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const ajv_1 = (0, tslib_1.__importDefault)(require("ajv"));
const ajv_formats_1 = (0, tslib_1.__importDefault)(require("ajv-formats"));
const spectral_core_1 = require("@stoplight/spectral-core");
const better_ajv_errors_1 = (0, tslib_1.__importDefault)(require("@stoplight/better-ajv-errors"));
const asyncApi2Schema = (0, tslib_1.__importStar)(require("@asyncapi/specs/schemas/2.3.0.json"));
const asyncApi2SchemaObject = { $ref: 'asyncapi2#/definitions/schema' };
const ajv = new ajv_1.default({
    allErrors: true,
    strict: false,
});
(0, ajv_formats_1.default)(ajv);
ajv.addSchema(asyncApi2Schema, 'asyncapi2');
const ajvValidationFn = ajv.compile(asyncApi2SchemaObject);
exports.default = (0, spectral_core_1.createRulesetFunction)({
    input: null,
    options: null,
}, function asyncApi2PayloadValidation(targetVal, _opts, context) {
    ajvValidationFn(targetVal);
    return (0, better_ajv_errors_1.default)(asyncApi2SchemaObject, ajvValidationFn.errors, {
        propertyPath: context.path,
        targetValue: targetVal,
    }).map(({ suggestion, error, path: errorPath }) => ({
        message: suggestion !== void 0 ? `${error}. ${suggestion}` : error,
        path: [...context.path, ...(errorPath !== '' ? errorPath.replace(/^\//, '').split('/') : [])],
    }));
});
//# sourceMappingURL=asyncApi2PayloadValidation.js.map