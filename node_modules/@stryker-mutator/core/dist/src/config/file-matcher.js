import path from 'path';
import minimatch from 'minimatch';
/**
 * A helper class for matching files using the `disableTypeChecks` setting.
 */
export class FileMatcher {
    constructor(pattern) {
        if (pattern !== false) {
            this.pattern = toPosixFileName(path.resolve(pattern));
        }
        else {
            this.pattern = pattern;
        }
    }
    matches(fileName) {
        return !!this.pattern && minimatch(toPosixFileName(path.resolve(fileName)), this.pattern);
    }
}
/**
 * Replaces backslashes with forward slashes. Minimatch only uses forward slashes
 * @see https://github.com/isaacs/minimatch#windows
 * @param fileName The file name that may contain backslashes `\`
 * @returns posix and ts complaint file name (with `/`)
 */
export function toPosixFileName(fileName) {
    return fileName.replace(/\\/g, '/');
}
//# sourceMappingURL=file-matcher.js.map